<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enn.energy.price.dal.mapper.ext.ElectricityPriceEquipmentExtMapper">
    <resultMap id="BaseResultMap" type="com.enn.energy.price.dal.po.mbg.ElectricityPriceEquipment">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="equipment_id" jdbcType="VARCHAR" property="equipmentId" />
        <result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="version_id" jdbcType="VARCHAR" property="versionId" />
        <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
        <result column="tenant_name" jdbcType="VARCHAR" property="tenantName" />
        <result column="system_code" jdbcType="VARCHAR" property="systemCode" />
        <result column="state" jdbcType="INTEGER" property="state" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Base_Column_List">
        id, equipment_id, equipment_name, rule_id, version_id, tenant_id, tenant_name, system_code,
        state, create_time, update_time
    </sql>

    <sql id="Select_By_Map">
        <where>
            <if test="equipmentId != null">
                and equipment_id = #{equipmentId}
            </if>
            <if test="systemCode != null">
                and system_code = #{systemCode}
            </if>
            <if test="versionId != null">
                and version_id = #{versionId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
        </where>
    </sql>

    <sql id="Order_By_Map">
        <where>
            <if test="equipmentId != null">
                and equipment_id = #{equipmentId}
            </if>
            <if test="systemCode != null">
                and system_code = #{systemCode}
            </if>
            <if test="versionId != null">
                and version_id = #{versionId}
            </if>
        </where>
    </sql>

    <select id="selectElectricityPriceEquipment" parameterType="com.enn.energy.price.dal.po.mbg.ElectricityPriceEquipment"
            resultMap="BaseResultMap">
        select rule_id,
               version_id
        from electricity_price_equipment
        where system_code = #{systemCode,jdbcType=VARCHAR}
          and equipment_id = #{equipmentId,jdbcType=VARCHAR}
          and state = 0
    </select>
    <select id="selectEquByCondition" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from electricity_price_equipment
        <include refid="Select_By_Map" />
    </select>
    <select id="selectEquByConditionOrderByUpdateTime"  resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from electricity_price_equipment
        <include refid="Select_By_Map" /> order by update_time desc
    </select>

    <insert id="batchAddElectricityPriceEquipment" parameterType="java.util.List">
        insert into electricity_price_equipment (equipment_id, equipment_name, rule_id,
        version_id, tenant_id, tenant_name, system_code,
        state, create_time, update_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.equipmentId,jdbcType=VARCHAR}, #{item.equipmentName,jdbcType=VARCHAR}, #{item.ruleId,jdbcType=VARCHAR},
            #{item.versionId,jdbcType=VARCHAR}, #{item.tenantId,jdbcType=VARCHAR},#{item.tenantName,jdbcType=VARCHAR}, #{item.systemCode,jdbcType=VARCHAR},
            #{item.state,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <insert id="addElectricityPriceEquipment" parameterType="com.enn.energy.price.dal.po.mbg.ElectricityPriceEquipment">
        insert into electricity_price_equipment (equipment_id, equipment_name, rule_id,
                                                 version_id, tenant_id, tenant_name, system_code,
                                                 state, create_time, update_time)
        values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, #{ruleId,jdbcType=VARCHAR},
                #{versionId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR},#{tenantName,jdbcType=VARCHAR}, #{systemCode,jdbcType=VARCHAR},
                #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="selectEquVersionRecentOneValidByCondition"
            resultType="com.enn.energy.price.dal.po.view.ElectricityPriceEquVersionView">
        select equ.version_id versionId, equ.rule_id ruleId,ver.start_date startDate,ver.end_date endDate
        from electricity_price_equipment equ left join electricity_price_version ver
                                                       on equ.version_id = ver.version_id
        where equ.equipment_id = #{equipmentId} and (#{systemCode} is null or equ.system_code = #{systemCode}) and ver.state = #{state}
          and ver.start_date &lt; #{activeTime} order by ver.start_date desc limit 1
    </select>
    <select id="selectEquVersionLastOneValidByTime"
            resultType="com.enn.energy.price.dal.po.view.ElectricityPriceEquVersionView">
        select equ.version_id versionId, equ.rule_id ruleId,ver.start_date startDate,ver.end_date endDate
        from electricity_price_equipment equ left join electricity_price_version ver
                                                       on equ.version_id = ver.version_id
        where equ.equipment_id = #{equipmentId} and (#{systemCode} is null or equ.system_code = #{systemCode}) and ver.state = #{state}
          and ver.start_date &lt;= #{activeTime} order by ver.start_date desc limit 1
    </select>

    <update id="updatePriceEquipmentState" parameterType="java.lang.String">
        update electricity_price_equipment
        set state = 1,
        update_time = NOW()
        where version_id = #{versionId,jdbcType=VARCHAR}
    </update>


    <update id="updatePriceEquipment" parameterType="com.enn.energy.price.dal.po.mbg.ElectricityPriceEquipment">
        update electricity_price_equipment
        <set>
            <if test="ruleId != null">
                rule_id = #{ruleId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where version_id = #{versionId,jdbcType=VARCHAR}
    </update>
</mapper>